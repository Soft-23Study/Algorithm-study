# ----------------------------------------------------
# 1. dp[i]: i번째 계단을 디뎠을 때 가질 수 있는 최댓값
# 2. 어떤 i번째 계단을 딛을 때, 그 전 칸(i-1)을 딛고 오거나 / 전전 칸(i-2)을 딛고 오거나 두 경우로 나눌수 있음
# 3. 연속해서 세 개의 계단을 밟을 수 없다는 조건
#     => i-1 칸의 dp 값을 가져오면 안 됨. dp[i-1] 값은 i-2번칸 밟고 -> i-1번칸 밟는 경우를 포함하고 있기 때문에, 이 경우를 제외해야 함.
#     => dp[i-3] 번째 칸 값을 가져오고, 거기에 stairs[i-1] 값을 더함으로써 위와 같은 경우를 제외해준다.
# ----------------------------------------------------
n = int(input())
stairs = [0]
for _ in range(n):
    stairs.append(int(input()))

dp = [0] * (n+1)

dp[1] = stairs[1]

for i in range(2,n+1):
    dp[i] = max(dp[i-2],dp[i-3]+stairs[i-1]) + stairs[i]

print(dp[-1])
